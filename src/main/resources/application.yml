server:
  port: 8080
  servlet:
    session:
      timeout: 20m
      cookie:
        max-age: 20m

spring:
  application:
    name: kcdAuthServer
  datasource:
    url: jdbc:mysql://localhost:3306/kcd
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USER_NAME}
    password: ${DB_USER_PASSWORD}
  sql:
    init:
      platform: mysql
  # Hibernate 설정 - 테이블 자동 생성
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true

  # spring security oAuth2 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID} # 앱키 -> REST API 키 intellij Environment Variables 항목 추가
            client-secret: ${CLIENT_SECRET} # 카카오 로그인 -> 보안 -> Client Secret 코드 intellij Environment Variables 항목 추가
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kcd 카카오 oAuth2 인증 및 로그인
            scope:
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # "인가 코드 받기" 항목
            token-uri: https://kauth.kakao.com/oauth/token # "토큰 받기" 항목
            user-info-uri: https://kapi.kakao.com/v2/user/me # "사용자 정보 가져오기" 항목
            user-name-attribute: id # 식별자 . 카카오의 경우 "id" 사용

  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      connect-timeout: 2s
      timeout: 1s
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 0

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
